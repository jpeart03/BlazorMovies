@inject IJSRuntime js

<input type="checkbox" @bind="displayButtons" />

<GenericList List="Movies" Context="movie">
    <ElementTemplate>
        <MovieElement Movie="movie" DisplayDelete="displayButtons" DeleteMovie="DeleteMovie" />
    </ElementTemplate>
</GenericList>

<Confirmation @ref="confirmation" OnConfirm="OnConfirm" OnCancel="OnCancel">
    <div>Do you wish to delete @movieToBeDeleted.Title?</div>
</Confirmation>

@code {
    [Parameter]
    public List<Movie> Movies { get; set; }

    bool displayButtons = false;

    Confirmation confirmation;
    Movie movieToBeDeleted;

    private async Task DeleteMovie(Movie movie)
    {
        movieToBeDeleted = movie;
        confirmation.Show();
        //await js.MyFunction("my custom interop message");
        //var confirmed = await js.Confirm($"Are you sure you want to delete {movie.Title}");

        //if (confirmed)
        //{
        //    Movies.Remove(movie);
        //}
    }

    void OnConfirm()
    {
        Movies.Remove(movieToBeDeleted);
        movieToBeDeleted = null;
        confirmation.Hide();
    }

    void OnCancel()
    {
        movieToBeDeleted = null;
        confirmation.Hide();
    }

    protected override void OnInitialized()
    {
        Console.WriteLine($"OnInitialized: Movies.Count = {Movies.Count()}");
    }

    protected override void OnParametersSet()
    {
        Console.WriteLine($"OnParametersSet: Movies.Count = {Movies.Count()}");
    }

    protected override void OnAfterRender(bool firstRender)
    {
        Console.WriteLine($"OnAfterRender: Movies.Count = {Movies.Count()}");
    }

    protected override bool ShouldRender()
    {
        return true;
    }
}
